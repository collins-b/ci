version: 2

jobs:
  build:
    docker:
      - image: circleci/node:7.10
      - image: 'postgres:9.6-alpine'
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ''
          PROJECT_ID: edms-api
          CLUSTER_NAME: edms
          COMPUTE_ZONE: us-central1-a
          DEPLOYMENT_NAME: edms-api
          CONTAINER_NAME: edms-api

    working_directory: ~/workspace

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run:
          name: Install Node Packages
          command: |
            yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Running Tests
          command: npm test

      - run:
          command: |
            sudo /opt/google-cloud-sdk/bin/gcloud --quiet version
            sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update --version 120.0.0
            udo /opt/google-cloud-sdk/bin/gcloud --quiet components update --version 120.0.0 kubectl
            docker build -t gcr.io/${PROJECT_ID}/node-app:$CIRCLE_SHA1 .
            sudo /opt/google-cloud-sdk/bin/gcloud docker -- push gcr.io/${PROJECT_ID}/node-app:$CIRCLE_SHA1
            sudo /opt/google-cloud-sdk/bin/kubectl set image deployment/${DEPLOYMENT_NAME} ${CONTAINER_NAME}=gcr.io/${PROJECT_ID}/node-app:$CIRCLE_SHA1
          
      - deploy:
          production:
              branch: develop
              command: |
                echo $SERVICE_KEY > key.txt
                base64 -i key.txt -d > ${HOME}/gcloud-service-key.json
                sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account ${ACCOUNT_ID} --key-file ${HOME}/gcloud-service-key.json
                sudo /opt/google-cloud-sdk/bin/gcloud config set project $PROJECT_ID
                sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME
                sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone $COMPUTE_ZONE
                sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $CLUSTER_NAME
                sudo service docker start

